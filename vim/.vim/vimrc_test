vim9script

# Baseline is vim defaults
source $VIMRUNTIME/defaults.vim

# Builtin plugins
packadd cfilter
packadd comment

# Appearance options
colorscheme quiet
set background=dark
highlight Normal ctermbg=NONE
set number
set colorcolumn=80
set signcolumn=yes
set listchars=tab:>\ \ ,trail:-,precedes:@,extends:@
set list
set nowrap
set scrolloff=1000

# Behaviour options
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set ignorecase
set smartcase
set splitright
set splitbelow
set foldmethod=indent
set foldlevelstart=99
set wildcharm=9
set wildoptions=fuzzy,pum,tagfile
set hidden
set noswapfile
set path=.,**
set undofile
set undodir=$MYVIMDIR/undo
set grepprg=rg\ --vimgrep\ -uu

# Autocommands
augroup CUSTOM
    autocmd!
    autocmd FileType c,cpp setlocal formatprg=clang-format\ --style=Microsoft\ -
    autocmd FileType python setlocal formatprg=ruff\ format\ -q\ -
    autocmd ShellFilterPost * if v:shell_error != 0 | silent undo | endif
    autocmd FileType qf nnoremap <buffer> <silent> <cr> <cr>:cclose<cr>
    autocmd CmdlineEnter * set hlsearch
    autocmd CmdlineLeave * set nohlsearch
augroup END

# Keymaps
g:mapleader = " "
noremap j gj
noremap k gk
noremap 0 g0
noremap $ g$
noremap [b :bprevious<cr>
noremap ]b :bnext<cr>
noremap [q :cprevious<cr>
noremap ]q :cnext<cr>
nnoremap <leader>b :buffer <tab>
nnoremap <silent> <leader>c :close<cr>
nnoremap <silent> <leader>d :lcd %:h<cr>
nnoremap <leader>f :find **/*
nnoremap <leader>g :execute('silent grep! ' .. input('Grep: ')) \| redraw! \| copen<cr>
nnoremap <leader>h :execute('helpgrep ' .. input('Helpgrep: ')) \| copen<cr>
nnoremap <leader>o :call setqflist([], ' ', { "efm": "%f", "lines": v:oldfiles }) \| copen<cr>
nnoremap <silent> <leader>q :copen<cr>
nnoremap <silent> <leader>s :call setreg("", system("xsel -b"))<cr>
nnoremap <silent> <leader>S :call system("xsel -bi", getreg(""))<cr>
nnoremap <silent> <leader>t :vertical terminal<cr>
nnoremap <silent> <leader>v :edit $MYVIMRC<cr>
nnoremap <silent> <leader>w :set invwrap<cr>
nnoremap - :edit .<cr>

# Settings
# var lspServers = [
# 	{ name: "clangd", filetype: ["c", "cpp"], path: "clangd", args: ["--background-index"], },
# 	{ name: "pylsp", filetype: "python", path: "pylsp", args: [], },
# 	{ name: "ruff", filetype: "python", path: "ruff", args: ["server"], },
# ]
# autocmd User LspSetup call LspAddServer(lspServers)
# setlocal completeopt-=preview
# nnoremap <silent> <buffer> K :LspHover<cr>
# nnoremap <silent> <buffer> <c-]> :LspGotoDefinition<cr>
# nnoremap <silent> <buffer> grr :LspShowReferences<cr>
# nnoremap <silent> <buffer> gra :LspCodeAction<cr>
# nnoremap <silent> <buffer> grn :LspRename<cr>
# nnoremap <silent> <buffer> ]d :LspDiagNext<cr>
# nnoremap <silent> <buffer> [d :LspDiagPrev<cr>
